---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/register":
    post:
      summary: Registers a new user
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: registration successful
          content:
            application/json:
              examples:
                example_0:
                  value:
                    request:
                      user:
                        email: newuser@example.com
                        password: password123
                    response:
                      status: success
                      message: Registration successful!
                      data:
                        jwt: generated_jwt_token
                        refresh_token: generated_refresh_token
        '422':
          description: registration failed
          content:
            application/json:
              examples:
                example_0:
                  value:
                    request:
                      user:
                        email: ''
                        password: password123
                    response:
                      status: error
                      message: Registration failed!
                      data:
                        email:
                        - can't be blank
        '500':
          description: token generation failed
          content:
            application/json:
              examples:
                example_0:
                  value:
                    request:
                      user:
                        email: newuser@example.com
                        password: password123
                    response:
                      status: error
                      message: Token generation failed!
                      data: Detailed error message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password
                  required:
                  - email
                  - password
        required: true
        description: User registration parameters
  "/api/login":
    post:
      summary: Logs in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: login successful
          content:
            application/json:
              examples:
                example_0:
                  value:
                    request:
                      user:
                        email: existinguser@example.com
                        password: password123
                    response:
                      status: success
                      message: Login successful!
                      data:
                        jwt: generated_jwt_token
                        refresh_token: generated_refresh_token
        '404':
          description: user not found
          content:
            application/json:
              examples:
                example_0:
                  value:
                    request:
                      user:
                        email: nonexistent@example.com
                        password: password123
                    response:
                      status: error
                      message: User with email nonexistent@example.com not found!
                      data:
        '401':
          description: invalid password
          content:
            application/json:
              examples:
                example_0:
                  value:
                    request:
                      user:
                        email: existinguser@example.com
                        password: wrongpassword
                    response:
                      status: error
                      message: Login failed! Invalid password
                      data:
        '500':
          description: token generation failed
          content:
            application/json:
              examples:
                example_0:
                  value:
                    request:
                      user:
                        email: existinguser@example.com
                        password: password123
                    response:
                      status: error
                      message: Token generation failed!
                      data: Detailed error message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password
                  required:
                  - email
                  - password
        required: true
        description: User login parameters
  "/api/token/validate":
    post:
      summary: Validates a token
      tags:
      - Tokens
      parameters:
      - name: Authorization
        in: header
        required: true
        description: Authorization header with Bearer token
        schema:
          type: string
      responses:
        '200':
          description: token is valid
          content:
            application/json:
              examples:
                example_0:
                  value:
                    response:
                      status: success
                      message: Token is valid
                      data: {}
        '401':
          description: Invalid token
          content:
            application/json:
              examples:
                example_0:
                  value:
                    response:
                      status: error
                      message: Invalid token
                      data: Error decoding token
  "/api/token/refresh":
    post:
      summary: Refreshes a token
      tags:
      - Tokens
      parameters: []
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              examples:
                example_0:
                  value:
                    response:
                      status: success
                      message: Token refreshed successfully
                      data:
                        jwt: new_jwt
                        refresh_token: new_refresh_token
        '401':
          description: Refresh token has expired
          content:
            application/json:
              examples:
                example_0:
                  value:
                    response:
                      status: error
                      message: Refresh token has expired
                      data:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
              - refresh_token
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
